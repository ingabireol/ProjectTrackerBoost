# ========================================
# ProjectTracker Docker Configuration
# ========================================

spring.application.name=ProjectTracker

# Server Configuration
server.port=${APP_PORT:8080}
server.servlet.context-path=/

# PostgreSQL Configuration - Docker Service Names
spring.datasource.url=jdbc:postgresql://postgres:5432/${POSTGRES_DB:projectTrackerDb}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:078868}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

# MongoDB Configuration - Docker Service Names
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=${MONGO_INITDB_DATABASE:projecttracker_audit}
spring.data.mongodb.uri=mongodb://mongodb:27017/${MONGO_INITDB_DATABASE:projecttracker_audit}
spring.data.mongodb.auto-index-creation=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# Logging Configuration - Less verbose for Docker
logging.level.root=INFO
logging.level.com.buildmaster.projecttracker=INFO
logging.level.org.springframework.cache=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Cache Configuration
spring.cache.type=${CACHE_TYPE:simple}

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Validation Configuration
spring.jpa.properties.hibernate.validator.apply_to_ddl=false

# Transaction Configuration
spring.jpa.properties.hibernate.connection.autocommit=false

# JWT Configuration
jwt.secret=${JWT_SECRET:0c78bac8dfc6320ec3d31193015221e44b1d36ae0b95ff977df0bbe5bc4a9c2d}
jwt.expiration=${JWT_EXPIRATION:1800000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:86400000}

# OAuth2 Google Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Admin Configuration
app.admin.username=${ADMIN_USERNAME:admin}
app.admin.email=${ADMIN_EMAIL:admin@projecttracker.com}
app.admin.password=${ADMIN_PASSWORD:admin123}

# OAuth2 Success Redirect URIs
app.oauth2.authorized-redirect-uris=${ALLOWED_ORIGINS:http://localhost:3000/oauth2/redirect}

# Actuator Endpoints (for health checks)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Disable OAuth2 debug logging in Docker for cleaner logs
logging.level.org.springframework.security.oauth2=WARN
logging.level.org.springframework.security.web=WARN
logging.level.com.buildmaster.projecttracker.security=INFO